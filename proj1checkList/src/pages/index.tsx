import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
//import Link from "next/link";
import React from "react";
import { useRef } from "react";
import { api } from "~/utils/api";
import {Input} from "../components/ui/input"

export default function Home() {
  //const hello = api.post.hello.useQuery({ text: "from tRPC" });

  return (
    <div>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <header className="flex justify-between items-center p-5 bg-blue-500 text-white">
          <h1 className="text-xl">Welcome to T3 Checklist</h1>

          <AuthShowcase />
    
        </header>
       
        <InputDemo />
        <Content />
      </main>
      
    </div>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.post.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}
const Content: React.FC = () => {
  const { data: sessionData } = useSession();
  const { data: tasks, refetch: refetchTasks } = api.task.getAll.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );
  return (
    <div>
      {JSON.stringify(tasks)}
    </div>
  );

};

export function InputDemo(){
  const [task, setTask] = React.useState(""); // State to hold the input value
  // Function to update state based on input changes
  const createTask = api.task.create.useMutation({});
  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setTask(event.target.value);
  };
  // Example function to use the input text for a purpose (e.g., logging it)
  const handleSubmit = () => {
    //console.log("Submitted email:", email);
    createTask.mutate({
      title: task
    })
    // Here you can add more logic to use the email, like sending it to an API
  };
  return (
    <div>
      <Input 
        type="task" 
        placeholder="Task" 
        value={task} // Bind input value to state
        onChange={handleInputChange} // Update state on input change
      />
      <button onClick={handleSubmit}>Submit</button> {/* Example usage of the input text */}
     
    </div>
  );
}

